const l=(r,o)=>{const e=t=>{r&&!r.contains(t.target)&&!t.defaultPrevented&&o(t)};return document.addEventListener("click",e,!0),{destroy(){document.removeEventListener("click",e,!0)}}},a=r=>Array.from(r.querySelectorAll('[href], button, textarea, input, div[contentEditable="true"], select, [tabindex][tabindex="0"]')).filter(o=>!o.hasAttribute("disabled")&&o.getAttribute("tabindex")!=="-1"),v=(r,o)=>{let e,t;const c=n=>{n.key==="Tab"&&(n.shiftKey?document.activeElement===e&&(t.focus(),n.preventDefault()):document.activeElement===t&&(e.focus(),n.preventDefault()))},s=(n=!1)=>{if(o===!1)return;const i=a(r);e=i[0],t=i[i.length-1],n||e==null||e.focus(),e==null||e.addEventListener("keydown",c),t==null||t.addEventListener("keydown",c)},d=()=>{e==null||e.removeEventListener("keydown",c),t==null||t.removeEventListener("keydown",c)},u=(n,i)=>(n.length&&(d(),s(!0)),i);return new MutationObserver(u).observe(r,{childList:!0,subtree:!0}),s(),{update(n){o=n,n?s():d()},destroy(){d()}}};export{l as c,v as f,a as g};
